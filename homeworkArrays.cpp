#include <iostream>
#include <clocale>
#include <time.h>
using namespace std;
float random();
int summOfDigits(int n); 
int maxValue(int n);
int countOfPositiveEvenElements(int A[], int N);
void printEvenDigits(float A[], int N);
void initA50(int A[], int N);
void printNotEvenDigits(float A[], int N);
void fillAPositiveAndNegativeValues(float A[],float B[], float C[],int N,int & t);
void initAn(int A[],int N, int n);
void fillAfloat(float A[], int N);
void printA(float A[], int N);
void sortPositiveAndNegative(float A[], int N);
int main()
{
	setlocale(LC_ALL, "Russian");
	int	task=10;
	srand(time(NULL));
	cout << "введите номер задачи:" << endl 
				<< "1.сумма цифр числа" << endl 
					<< "2.наибольшее число из цифр введённого" << endl 
						<< "3.количество положительных чётных членов массива" << endl
							<< "4.сначала нечётные номера массива, затем четные" << endl 
								<< "5.положительные и отрицательные элементы массива" << endl
									<< "6.положительные и отрицательные элементы массива (через 1 массив)" << endl;
	while (task != 0)
	{
		cin >> task;
		switch (task)
		{
		case 0:
			cout << "выполнение программы остановлено\n";
			break;
		case 1:
			/*пользователь вводит с клавиатуры натуральное число, проверить корректность ввода, вычислить и вывести на экран сумму цифр введённого пользователем числа.*/
			int n;
			cout << "введите натуральное число" << endl;
			cin >> n;
			if (n > 0) cout << "сумма чисел данного числа=" << summOfDigits(n);
			else  cout << "вы ввели число не подходящее под условие";
			break;
			//___________________________________________________________________________________________________________________________________________________________________________________________
			//___________________________________________________________________________________________________________________________________________________________________________________________

		case 2:
			/*Пользователь вводит с клавиатуры пятизначное натуральное число, которое сохраняется в переменную n,
				проверить корректность ввода, составить и вывести на экран число из цифр введённого числа n, так,
				чтобы выведенное число оказалось максимальным из возможных.Например, если пользователь ввёл число 22195,
				то программа должна вывести число 95221.*/
		{cout << "введите натуральное пятизначное число" << endl;
		cin >> n;
		if (n > 9999 && n < 100000)
		{
			cout << "максимальное число=" << maxValue(n) << endl;
		}
		else cout << "вы ввели число не подходящее под условие";
		cout << '\n' << "чтобы остановить выполнение программы нажмите 0, иначее введите номер задания\n"; }
		break;
		//___________________________________________________________________________________________________________________________________________________________________________________________
		//___________________________________________________________________________________________________________________________________________________________________________________________
		case 3:
			/*Пользователь вводит с клавиатуры натуральное число не большее 100, которое сохраняется в переменную n,
			проверить корректность ввода, создать массив из 10 случайных целых чисел из отрезка [-2n;n],
			вывести массив на экран в строку, подсчитать и и вывести на экран количество положительных чётных чисел в массиве.*/
		{const int N = 10;
		int A[N];
		cout << "введите натуральное число не больше 100" << '\n';
		cin >> n;
		if (n > 0 && n < 101)
		{
			initAn(A, N, n);
			cout << "число чётных положительных элементов массива=" << countOfPositiveEvenElements(A, N);
		}
		else	cout << "вы ввели число вне промежутка"; 
		cout << '\n' << "чтобы остановить выполнение программы нажмите 0, иначее введите номер задания\n"; }
		break;
		//___________________________________________________________________________________________________________________________________________________________________________________________
		//___________________________________________________________________________________________________________________________________________________________________________________________
		case 4:
			/*Объявить массив вещественных чисел размера N (число N объявить как константу).
			Проинициализировать значения элементов массива случайными числами из промежутка от -50 до 50.
			Вывести значения сначала элементов с нечетными коэффициентами (1-й, 3-й, 5-й,...) а затем - с четными.*/
		{	const int N = 20;
		float A[N];
		fillAfloat(A, N);
		printEvenDigits(A, N);
		printNotEvenDigits(A, N);
		cout << '\n' << "чтобы остановить выполнение программы нажмите 0, иначее введите номер задания\n";
		}
		break;
		//___________________________________________________________________________________________________________________________________________________________________________________________
		//___________________________________________________________________________________________________________________________________________________________________________________________
		case 5:
			/*Объявить массив А вещественных чисел размера N (число N объявить как константу).
			Проинициализировать значения элементов массива случайными числами из промежутка от -50 до 50.
			"Разделить" массив А на два массива: положительные записать в массив В, отрицательные - в С.*/
		{
			const int N = 20;
			float A[N], B[N], C[N];
			int k = 0;
			fillAfloat(A, N);
			cout << "#####################" << '\n';
			fillAPositiveAndNegativeValues(A, B, C, N, k);
			printA(B, k);
			cout << "#####################" << '\n';
			printA(C, (N - k));
			cout << '\n' << "чтобы остановить выполнение программы нажмите 0, иначее введите номер задания\n";
		}
		break;
		case 6:
			/*Объявить массив А вещественных чисел размера N (число N объявить как константу).Проинициализировать
			значения элементов массива случайными числами из промежутка от -50 до 50.
			"Отсортировать" массив А на месте (т.е. не используя вспомогательных массивов В и С) таким образом:положительные
			значения массива А переместить в начало, отрицательные переместить в конец массива А.*/
		{
			const int N = 20;
			float A[N];
			fillAfloat(A, N);
			sortPositiveAndNegative(A, N);
			printA(A, N);
			cout <<'\n'<< "чтобы остановить выполнение программы нажмите 0, иначее введите номер задания\n";
		}
		break;
		default: cout << "такого задания нету\n";
		}
		
	}
system("PAUSE");
}
void fillAfloat(float A[], int N)
{
	int i = 0;
	while (i<N)
	{
		A[i] = random();
		i++;
	}

}
float random()
{
float r = 0;
		r += rand() % 98 - 49;
		r += (rand() % 9) / 10.0;
		r += (rand() % 9) / 100.0;
		//r += (rand() % 9) / 1000.0;
		return (r);
}
int summOfDigits(int n)
{
	int sum=0;
	while (n > 0)
	{
		sum = sum + (n % 10);
		n = n / 10;
	}
	return (sum);
}
int maxValue(int n)
{
	const int N=5;
	int i = 0, A[N],j=0;
	while (i < N)
	{
		A[i] = n % 10;
		n = n / 10;
		i++;
	}
	i = 0;
	while (i<N)
	{
		j = i + 1;;
		while (j < N)
		{
			if (A[i] < A[j]) swap(A[i], A[j]);
			j++;
		}
		i++;
	}
	i = 0;
	while (i < N)
	{
		n = (n + A[i]) * 10;
		i++;
	}
	return (n/10);
}
void initAn(int A[], int N, int n)
{
	int i = 0;
	while (i < 10)
	{
		A[i] = rand() % (3 * n) - (2 * n);
		i++;
	}
}
int countOfPositiveEvenElements(int A[], int N)
{
	int i = 0, count=0;
	while (i < 10)
	{
		if (A[i] > 0 && ((A[i] % 2) == 0)) count= count + 1;
		i++;
    }
	return(count);
}
void printEvenDigits(float A[], int N)
{
	int i = 0;
	while (i < N)
	{
		cout << A[i] << "  ";
		i += 2;

	}
	cout << '\n';
}
void printNotEvenDigits(float A[], int N)
{
	int i = 1;
	while (i < N)
	{
		cout << A[i] << "  ";
		i += 2;
    }
	cout << '\n';
}
void initA50(int A[], int N)
{
	int i = 0;
	while (i < N)
	{
		A[i] = rand() % (100) - (50);
		i++;
	}
}
void fillAPositiveAndNegativeValues(float A[], float B[],float C[], int N, int & t)
{
	int i = 0, j = 0, k = 0;
	while (i < N)
	{
		if (A[i] > 0) { B[j] = A[i]; j++; t++; }
		else { C[k] = A[i]; k++; }
		i++;
	}
}
void printA(float A[], int N)
{
	int i = 0;
	while (i < N)
	{
		cout << A[i] << '\n';
			i++;
	}
}
void sortPositiveAndNegative(float A[], int N)
{
	int i = 0, j;
	while (i < N)
	{
		j = i + 1;
		while (j < N)
		{
			if (A[i] < A[j]) swap(A[i], A[j]);
			j++;
		}
		i++;
	}

}